function [alpha,tx,ty,s]=PointBasedFun(w,mA,mb,dim,scale)


% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>> CALCOLO I CENTROIDI >>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

y_m= centroidCustom(mA(:,1),mA(:,2));

x_m= centroidCustom(mb(:,1),mb(:,2));

% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>> CALCOLO DISPLACEMENT >>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

x_err = mb-x_m;

y_err = mA-y_m;

% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>> MATRICE DI COVARIANZA DEGLI ERRORI FIDUCIARI >>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% Calcolo della matrice di covarianza degli errori fiduciari

Z=zeros(2,2);

for i=1:3

    Z = Z+(w(i)^2*x_err(i,:)'*y_err(i,:));

end

% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>> DECOMPOSIZIONE VALORI SINGOLARI >>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[U,~,V] = svd(Z);

% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>> R >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

v=[1,det(V*U)];

R=V*diag(v)*U';

% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>> s >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

if(scale)
    s_1=0;
    
    s_2=0;
    
    x_err=x_err';
    
    y_err=y_err';
    
    for i=1:length(x_err)
    
        s_1=s_1+(w(i)^2*R*x_err(:,i))'*y_err(:,i);
    
        s_2=s_2+(w(i)^2*R*x_err(:,i))'*x_err(:,i);
    
    end
    
    s = floor(s_1/s_2 * 100)/100;
else
    s = 1;
end

% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>> t >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

% RICONVERSIONE COORDINATE % dim(2) è la x mentre y_ o x_ m (1) è x

yy = round(y_m(2)) - dim(1)/2; 

yx = round(y_m(1)) - dim(2)/2 ;

xy = round(x_m(2)) - dim(1)/2;

xx = round(x_m(1)) - dim(2)/2;

y_m = [yx yy];
x_m = [xx xy];

t = y_m'-s*R*x_m';

% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>> PARAMETRI >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
% >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
alpha = -atan(R(1,2)/R(1,1));
tx = t(1);
ty = t(2);
   
end